import streamlit as st
import pandas as pd
import plotly.express as px

st.set_page_config(
    page_title="An√°lise de Dados CSAT",
    layout="wide"
)

# Sele√ß√£o da subp√°gina
subpagina = st.sidebar.selectbox(
    "Selecione uma se√ß√£o",
    ["Contextualiza√ß√£o e Objetivo", "Entendendo o Dataset", "Dashboard Explorat√≥ria"]
)

# Carregar dados (ajuste o caminho para o seu CSV)
df = pd.read_csv("Customer_support_data.csv")

# ---------------------------
# Subp√°gina 1: Contextualiza√ß√£o
# ---------------------------
if subpagina == "Contextualiza√ß√£o e Objetivo":
    st.header("üìå Contextualiza√ß√£o e Objetivo")
    st.write("""
    O objetivo dessa an√°lise √© entender os fatores que impactam a satisfa√ß√£o do cliente (**CSAT**).
        
    As perguntas principais s√£o:
    1. Como a satisfa√ß√£o varia por categoria de atendimento?
    2. Existe diferen√ßa entre os canais de atendimento?
    3. O tempo de resposta influencia a satisfa√ß√£o?
    4. H√° impacto do turno do operador?
    5. O tempo de experi√™ncia (tenure) influencia a satisfa√ß√£o?
    """)

# ---------------------------
# Subp√°gina 2: Entendendo o Dataset
# ---------------------------
elif subpagina == "Entendendo o Dataset":
    st.header("üìä Interpretando os Dados do Dataset")

    st.write("### Dataset:")
    st.markdown(
        "[Link para o dataset no Kaggle](https://www.kaggle.com/datasets/ddosad/ecommerce-customer-service-satisfaction?resource=download)"
    )

    st.write("Visualiza√ß√£o inicial do dataset:")
    st.dataframe(df.head())

    st.write("### üìë Colunas e tipos de dados")

    # Criando a tabela com Pandas
    data_dict = {
        "Nome da coluna": [
            "Unique_id", "channel_name", "category", "Sub-category",
            "Customer_Remarks", "Order_id", "order_date_time", "Issue_reported_at",
            "issue_responded", "Survey_response_Date", "Customer_City",
            "Product_category", "Item_price", "connected_handling_time",
            "Agent_name", "Supervisor", "Manager", "Tenure_Bucket",
            "Agent_Shift", "CSAT_Score"
        ],
        "Descri√ß√£o": [
            "Identificador √∫nico para cada registro",
            "Nome do canal de atendimento ao cliente",
            "Categoria da intera√ß√£o",
            "Subcategoria da intera√ß√£o",
            "Feedback fornecido pelo cliente",
            "Identificador do pedido associado √† intera√ß√£o",
            "Data e hora do pedido",
            "Carimbo de data e hora em que o problema foi relatado",
            "Carimbo de data e hora em que o problema foi respondido",
            "Data da resposta da pesquisa do cliente",
            "Cidade do cliente",
            "Categoria do produto",
            "Pre√ßo do item",
            "Tempo gasto para lidar com a intera√ß√£o (COLUNA SEM DADOS)",
            "Nome do agente de atendimento ao cliente",
            "Nome do supervisor",
            "Nome do gerente",
            "Agente de categoriza√ß√£o de buckets (tempo de casa, em dias)",
            "Tempo de turno do agente",
            "Pontua√ß√£o de satisfa√ß√£o do cliente (CSAT)"
        ],
        "Tipo de dado": [
            "Qualitativo Nominal", "Qualitativo Nominal", "Qualitativo Nominal",
            "Qualitativo Nominal", "Qualitativo Nominal", "Qualitativo Nominal",
            "Quantitativo Cont√≠nuo", "Quantitativo Cont√≠nuo", "Quantitativo Cont√≠nuo",
            "Quantitativo Discreto", "Qualitativo Nominal", "Qualitativo Nominal",
            "Quantitativo Cont√≠nuo", "Quantitativo Cont√≠nuo", "Qualitativo Nominal",
            "Qualitativo Nominal", "Qualitativo Nominal", "Qualitativo Ordinal",
            "Qualitativo Nominal", "Quantitativo Discreto"
        ]
    }

    df_tipos_de_dados = pd.DataFrame(data_dict)

    # Exibir como tabela interativa
    st.dataframe(df_tipos_de_dados, use_container_width=True)


# ---------------------------
# Subp√°gina 3: Dashboard Explorat√≥ria
# ---------------------------
elif subpagina == "Dashboard Explorat√≥ria":
    st.title("An√°lise de CSAT por Categoria de Atendimento")

    fig = px.bar(
    df.groupby("category")["CSAT Score"].mean().reset_index(),
    x="category",
    y="CSAT Score",
    color="category",
    labels={"category": "Categoria de Atendimento", "CSAT Score": "M√©dia de CSAT"},
    title="M√©dia de CSAT por Categoria"
    )
    fig.update_yaxes(dtick=1, tick0=1, range=[0.5, 5.5])

    st.plotly_chart(fig, use_container_width=True)

    # Resumo estat√≠stico por categoria
    st.subheader("Resumo Estat√≠stico das Notas de CSAT por Categoria")

    resumo = df.groupby("category")["CSAT Score"].describe().reset_index()
    st.dataframe(resumo, use_container_width=True)
